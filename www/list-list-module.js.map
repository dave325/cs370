{"version":3,"sources":["webpack:///./src/app/list/list.module.ts","webpack:///./src/app/list/list.page.html","webpack:///./src/app/list/list.page.scss","webpack:///./src/app/list/list.page.ts"],"names":[],"mappings":"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","file":"list-list-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { ListPage } from './list.page';\r\nimport { ProxyService } from '../proxy.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: '',\r\n        component: ListPage\r\n      }\r\n    ])\r\n  ],\r\n  declarations: [ListPage]\r\n})\r\nexport class ListPageModule { }\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Case List\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n\\r\\n\\r\\n  <ion-row>\\r\\n\\r\\n    <ion-col size=\\\"9\\\">\\r\\n\\r\\n      <div *ngIf=\\\"choice != 'date'\\\">\\r\\n        <ion-searchbar [(ngModel)]=\\\"searchQuery\\\" name=\\\"searchQuery\\\" (keyup.enter)=\\\"search($event)\\\" #searchBar>\\r\\n        </ion-searchbar>\\r\\n\\r\\n      </div>\\r\\n      <div *ngIf=\\\"choice == 'date'\\\">\\r\\n        <ion-item>\\r\\n          <ion-label position=\\\"stacked\\\">From Date</ion-label>\\r\\n          <ion-searchbar [(ngModel)]=\\\"p_from_date\\\" name=\\\"from_data\\\">\\r\\n          </ion-searchbar>\\r\\n        </ion-item>\\r\\n        <ion-item>\\r\\n          <ion-label position=\\\"stacked\\\">To Date</ion-label>\\r\\n          <ion-searchbar [(ngModel)]=\\\"p_to_date\\\" name=\\\"to_date\\\">\\r\\n          </ion-searchbar>\\r\\n        </ion-item>\\r\\n        <ion-select [(ngModel)]=\\\"p_increment_date\\\" value=\\\"ALL_DAY\\\">\\r\\n          <ion-select-option value=\\\"ALL_DAY\\\">Get cases of every weekday\\r\\n          </ion-select-option>\\r\\n          <ion-select-option value=\\\"MONDAY\\\">Get cases of Monday only\\r\\n          </ion-select-option>\\r\\n          <ion-select-option value=\\\"TUESDAY\\\">Get cases of Tuesday only\\r\\n          </ion-select-option>\\r\\n          <ion-select-option value=\\\"WEDNESDAY\\\">Get cases of Wednesday only\\r\\n          </ion-select-option>\\r\\n          <ion-select-option value=\\\"THURSDAY\\\">Get cases of Thursday only\\r\\n          </ion-select-option>\\r\\n          <ion-select-option value=\\\"FRIDAY\\\">Get cases of Friday only\\r\\n          </ion-select-option>\\r\\n          <ion-select-option value=\\\"SATURDAY\\\">Get cases of Saturday only\\r\\n          </ion-select-option>\\r\\n          <ion-select-option value=\\\"SUNDAY\\\">Get cases of Sunday only\\r\\n          </ion-select-option>\\r\\n        </ion-select>\\r\\n        <ion-button size=\\\"small\\\" fill=\\\"outline\\\" color=\\\"primary\\\" (click)=\\\"submitDate()\\\">Submit</ion-button>\\r\\n      </div>\\r\\n      <h2 class=\\\"alert alert-danger\\\" *ngIf=\\\"error\\\" role=\\\"alert\\\">{{error}}</h2>\\r\\n      <h2 class=\\\"alert alert-info\\\" *ngIf=\\\"info\\\" role=\\\"alert\\\">{{info}}</h2>\\r\\n\\r\\n    </ion-col>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    <ion-col size=\\\"3\\\">\\r\\n      <ion-label>Search By</ion-label>\\r\\n\\r\\n      <ion-select value=\\\"lastname\\\" okText=\\\"Okay\\\" cancelText=\\\"Dismiss\\\" #filterChoice [(ngModel)]=\\\"choice\\\">\\r\\n        <ion-select-option value=\\\"keyword\\\">Keyword</ion-select-option>\\r\\n        <ion-select-option value=\\\"id\\\">ID</ion-select-option>\\r\\n        <ion-select-option value=\\\"lastname\\\">Lastname</ion-select-option>\\r\\n        <ion-select-option value=\\\"date\\\">Date</ion-select-option>\\r\\n      </ion-select>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n\\r\\n  <div padding>\\r\\n  </div>\\r\\n  <ion-item>\\r\\n\\r\\n  </ion-item>\\r\\n  <ion-list>\\r\\n    <ion-item *ngFor=\\\"let item of caseList\\\" [routerDirection]=\\\"'root'\\\" [routerLink]=\\\"'/case/' + item.GetCase\\\">\\r\\n      {{item.Subject}} by {{item.Author}}<br>\\r\\n      <div class=\\\"item-note\\\" slot=\\\"end\\\">\\r\\n        {{item.GetCase}}\\r\\n        <br>\\r\\n        {{item.Date}}\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </ion-item>\\r\\n  </ion-list>\\r\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xpc3QvbGlzdC5wYWdlLnNjc3MifQ== */\"","import { Router } from '@angular/router';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { createHostListener } from '@angular/compiler/src/core';\r\nimport { ProxyService } from '../proxy.service';\r\n\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: 'list.page.html',\r\n  styleUrls: ['list.page.scss']\r\n})\r\n\r\n\r\n\r\n\r\nexport class ListPage implements OnInit {\r\n  private selectedItem: any;\r\n  caseList: Array<any>;\r\n  error;\r\n  info;\r\n\r\n  constructor(\r\n    private route: Router, private proxyService: ProxyService,\r\n  ) {\r\n\r\n  }\r\n\r\n  searchQuery;\r\n  searchChoice;\r\n  p_from_date;\r\n  p_to_date;\r\n  p_increment_date;\r\n  choice = 'lastname';\r\n\r\n\r\n  search($event: any) {\r\n\r\n    console.log(\"CHOICE IS \" + this.choice);\r\n    console.log(\"QUERY IS \" + this.searchQuery);\r\n\r\n    if (this.searchQuery == undefined) {\r\n      this.info = null;\r\n      this.error = \"Please add something in the search query\";\r\n      return;\r\n    }\r\n    this.error = null;\r\n    if (this.choice == undefined) {\r\n      this.choice = 'lastname';\r\n    }\r\n    if (this.choice === 'id') {\r\n      this.doSearch(this.proxyService.ENDPOINTS.getByID, {\r\n        p_case_select: this.searchQuery\r\n\r\n      });\r\n\r\n    }\r\n\r\n    if (this.choice === 'lastname') {\r\n      this.doSearch(this.proxyService.ENDPOINTS.getByName, {\r\n        p_lname: this.searchQuery,\r\n        p_fname: \"\"\r\n      });\r\n    }\r\n\r\n    if (this.choice === 'keyword') {\r\n\r\n      this.doSearch(this.proxyService.ENDPOINTS.getByKeyword, {\r\n        p_keyword: this.searchQuery,\r\n        p_s_choice: 3\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n\r\n  doSearch(endpoint: string, info: any) {\r\n    this.caseList = [];\r\n    this.proxyService.getCaseBy(endpoint,\r\n      info\r\n    ).then(\r\n      (res: any) => {\r\n        this.caseList = [];\r\n        var i = res.length;\r\n        if (this.choice === \"id\") {\r\n          this.route.navigate(['/case/' + info.p_case_select]);\r\n        }\r\n        while (i--) {\r\n\r\n          let element = res[i];\r\n          if (Object.keys(element).length > 1) {\r\n            if (element.Author.length > 0) {\r\n              this.caseList.push(element);\r\n            }\r\n          }\r\n        }\r\n\r\n\r\n        if (this.caseList.length === 0) {\r\n          this.info = null;\r\n          this.error = \"No Cases Found!\"\r\n        } else {\r\n          this.error = null;\r\n          this.caseList.reverse();\r\n        }\r\n      }, (err) => {\r\n        console.log(err);\r\n        this.info = null;\r\n        this.error = \"There was an error searching for cases. Please try later.\";\r\n      }\r\n    );\r\n\r\n  }\r\n  submitDate() {\r\n    let info = {\r\n      p_from_date: this.p_from_date,\r\n      p_to_date: this.p_to_date,\r\n      p_increment_date: this.p_increment_date\r\n    };\r\n    this.proxyService.getCaseBy(this.proxyService.ENDPOINTS.getByDate, info)\r\n      .then(\r\n        (res) => {\r\n          this.caseList = [];\r\n          var i = res.length;\r\n          while (i--) {\r\n\r\n            let element = res[i];\r\n            console.log(element);\r\n            if (Object.keys(element).length > 1) {\r\n              if (element.Author.length > 0) {\r\n                this.caseList.push(element);\r\n              }\r\n            }\r\n          }\r\n\r\n\r\n          if (this.caseList.length === 0) {\r\n            this.info = null;\r\n            this.error = \"No Cases Found!\"\r\n          } else {\r\n            this.error = null;\r\n            this.caseList.reverse();\r\n          }\r\n        }, (err) => {\r\n          console.log(err);\r\n          this.info = null;\r\n          this.error = \"There was an error searching for cases. Please try later.\";\r\n        }\r\n      )\r\n  }\r\n  ngOnInit() {\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n}\r\n"],"sourceRoot":""}